//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PatrickDBEntities : DbContext
    {
        public PatrickDBEntities()
            : base("name=PatrickDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblStudent> tblStudents { get; set; }
        public virtual DbSet<tblUserAccount> tblUserAccounts { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<tblPatientInfo> tblPatientInfoes { get; set; }
    
        public virtual ObjectResult<GetAllStudentsInfo_Result> GetAllStudentsInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStudentsInfo_Result>("GetAllStudentsInfo");
        }
    
        public virtual ObjectResult<GetAllPatientsInfoByPatientID_Result> GetAllPatientsInfoByPatientID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPatientsInfoByPatientID_Result>("GetAllPatientsInfoByPatientID", patientIDParameter);
        }
    
        public virtual ObjectResult<GetASPUsersAndRolesByName_Result> GetASPUsersAndRolesByName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetASPUsersAndRolesByName_Result>("GetASPUsersAndRolesByName");
        }
    }
}
