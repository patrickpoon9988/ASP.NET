// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebApplication1.Controllers
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAllPatientsInfoByPatientIDJSON()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllPatientsInfoByPatientIDJSON);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string About = "About";
            public readonly string Programe = "Programe";
            public readonly string Tution = "Tution";
            public readonly string GetAllStudentsInfo = "GetAllStudentsInfo";
            public readonly string Comment = "Comment";
            public readonly string TimeTable = "TimeTable";
            public readonly string GetAllPatientsInfoByPatientIDJSON = "GetAllPatientsInfoByPatientIDJSON";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string About = "About";
            public const string Programe = "Programe";
            public const string Tution = "Tution";
            public const string GetAllStudentsInfo = "GetAllStudentsInfo";
            public const string Comment = "Comment";
            public const string TimeTable = "TimeTable";
            public const string GetAllPatientsInfoByPatientIDJSON = "GetAllPatientsInfoByPatientIDJSON";
        }


        static readonly ActionParamsClass_TimeTable s_params_TimeTable = new ActionParamsClass_TimeTable();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TimeTable TimeTableParams { get { return s_params_TimeTable; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TimeTable
        {
            public readonly string patient = "patient";
        }
        static readonly ActionParamsClass_GetAllPatientsInfoByPatientIDJSON s_params_GetAllPatientsInfoByPatientIDJSON = new ActionParamsClass_GetAllPatientsInfoByPatientIDJSON();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllPatientsInfoByPatientIDJSON GetAllPatientsInfoByPatientIDJSONParams { get { return s_params_GetAllPatientsInfoByPatientIDJSON; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllPatientsInfoByPatientIDJSON
        {
            public readonly string patient = "patient";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string About = "About";
                public readonly string Comment = "Comment";
                public readonly string Index = "Index";
                public readonly string Programe = "Programe";
                public readonly string TimeTable = "TimeTable";
                public readonly string Tution = "Tution";
            }
            public readonly string About = "~/Views/Home/About.cshtml";
            public readonly string Comment = "~/Views/Home/Comment.cshtml";
            public readonly string Index = "~/Views/Home/Index.cshtml";
            public readonly string Programe = "~/Views/Home/Programe.cshtml";
            public readonly string TimeTable = "~/Views/Home/TimeTable.cshtml";
            public readonly string Tution = "~/Views/Home/Tution.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : WebApplication1.Controllers.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AboutOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult About()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.About);
            AboutOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ProgrameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Programe()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Programe);
            ProgrameOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TutionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Tution()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Tution);
            TutionOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetAllStudentsInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllStudentsInfo()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllStudentsInfo);
            GetAllStudentsInfoOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Comment()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comment);
            CommentOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TimeTableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult TimeTable()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TimeTable);
            TimeTableOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TimeTableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebApplication1.Models.PatientInfoModel patient);

        [NonAction]
        public override System.Web.Mvc.ActionResult TimeTable(WebApplication1.Models.PatientInfoModel patient)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TimeTable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "patient", patient);
            TimeTableOverride(callInfo, patient);
            return callInfo;
        }

        [NonAction]
        partial void GetAllPatientsInfoByPatientIDJSONOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebApplication1.Models.PatientInfoModel patient);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllPatientsInfoByPatientIDJSON(WebApplication1.Models.PatientInfoModel patient)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllPatientsInfoByPatientIDJSON);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "patient", patient);
            GetAllPatientsInfoByPatientIDJSONOverride(callInfo, patient);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
